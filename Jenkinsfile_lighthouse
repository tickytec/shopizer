
        
    stage('preparation') {
        buildSucceeded = true        
        PWD = pwd()
        SCRIPT = 'shopizer.js'
        DATE = String.format('%tF-%<tH-%<tM-%<tS', java.time.LocalDateTime.now())
        RESULTS_DIR = "testResults/${SCRIPT}/${DATE}"
 
        DOCKER_CMD = "docker run --rm -v ${PWD}/testResults:${PWD}/reports -w ${PWD} ibombit/lighthouse-puppeteer-chrome:latest node ${SCRIPT}"
    }
    
    stage('runShell') {
        print "---------- Running tests ----------"
        try {
            sh DOCKER_CMD
        } catch (err) {
            echo "Failed: ${err}"
            buildSucceeded = false
        }
    }
    
    stage('copyResults') {
        sh "rsync -r ${PWD}/testResults/* /opt/sitespeed-result/"
    }
    
    stage('addLinkToBuildDescription') {
        script{
            def URL = "http://13.11.111.11:9000"
            def link = "<a href='%s/%s/%s'>%s</a><br/>"
            currentBuild.setDescription(String.format(link, URL, SCRIPT, DATE, "Test result"))
        }
    }
    
    stage('publishReport') {
        archiveArtifacts allowEmptyArchive: true, artifacts: "${RESULTS_DIR}/**/*", onlyIfSuccessful: false
        publishHTML([
            allowMissing: true,
            alwaysLinkToLastBuild: true,
            keepAll: true,
            reportDir: "${RESULTS_DIR}",
            reportFiles: "index.html",
            reportName: "HTML Report",
            reportTitles: ""
        ])
    }
    
    stage('verifyBuild') {
        if (!buildSucceeded) {
            error("Build failed...")
        } else {
            echo 'Succeeded!'
        }
    }

